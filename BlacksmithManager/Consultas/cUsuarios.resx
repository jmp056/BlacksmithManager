<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ImprimirButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7pAAAO6QEOM0IcAAAAGXRF
        WHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAVtJREFUSEvN1rtKA0EUgOFFsNVCLESws7MS
        1EJrRWwsFGxEn8CHEVKKgp1PYCeipdhZ21gJFoKoiLf/XzKg2ZPsxk2CBz7IzJ5L2GQnyYIYxSXe/sC6
        EZTGCp5xikYXzLfO+tJYxz0281X1MN8660tjIEMWcITFfFU9zLfO+kIMYwzjfWBf+2dbOMZJH9jX/tkd
        vnroCee4xgvsHybWcYAZLOECnwgT69iGMYRDvLuIEus4wzz8St809wpJdXl7/Cxef+z9SuiXcPMDj/AJ
        rsp866J+4eYD9jDdBfOti/qFm74zP7gpbGC3A6+bl86uqF+4mYYsw+/6bQdeN6/dkPw5iZ74NGQCNvBk
        bcfr5rUbkj/xrWeXv25pyCTWmq8jc0jh2jrrC2dX6ym8gzRkFVfNdWQfKdIQ6wuncGt4C0y2qOx2zSJF
        GuJ+aZiUhnQT/2/IQP6t9Ph/V5Z9A6DEVPCobeFKAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>